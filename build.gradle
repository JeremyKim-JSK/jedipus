plugins {
   id 'java'
   id 'pl.allegro.tech.build.axion-release' version '1.3.2'
   id 'maven-publish'
   id 'com.jfrog.bintray' version '1.4'
   id 'findbugs'
}

scmVersion {
    tag {
        prefix = project.name
    }

   repository {
        customUsername = "$System.env.AXION_RELEASE_GITHUB_TOKEN"
        customPassword = ""
    }

   versionCreator 'versionWithBranch'

    hooks {
        pre 'fileUpdate', [file: 'README.md', pattern: {v,p -> /\d+\.\d+\.\d+/}, replacement: {v, p -> "$v"}]
        pre 'commit'
    }
}

project.group = 'com.fabahaba'
project.version = scmVersion.version

sourceCompatibility = 1.8

repositories {
   jcenter()
}

dependencies {
   compile 'com.fabahaba:fava:+'
   compile 'redis.clients:jedis:+'
}

task sourcesJar(type: Jar, dependsOn: classes) {
   from sourceSets.main.allSource
   classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn:javadoc) {
   from javadoc.destinationDir
   classifier 'javadoc'
}

publishing {
   publications {
      mavenJava( MavenPublication ) {
         from components.java

         artifact sourcesJar
         artifact javadocJar
        }
    }
}

artifacts {
   archives sourcesJar
   archives javadocJar
}

bintray {
    user = "$System.env.BINTRAY_USER"
    key = "$System.env.BINTRAY_API_KEY"

    publications = ['mavenJava']

    pkg {
        repo = 'libs'
        name = project.name
        desc = 'Extends the executor and marries the command logic of Jedis'
        websiteUrl = 'https://github.com/jamespedwards42/jedipus'
        vcsUrl = 'https://github.com/jamespedwards42/jedipus'
        issueTrackerUrl = 'https://github.com/jamespedwards42/jedipus/issues'
        licenses = ["Apache-2.0"]
        publish = true
        version {
            name = project.version
            //desc =  ''
            vcsTag = scmVersion.tag.prefix + '-' + project.version
            gpg {
                sign = true
                passphrase = "$System.env.BINTRAY_GPG_PASSPHRASE"
            }
        }
    }
}

bintrayUpload.onlyIf { !project.version.endsWith( 'SNAPSHOT' ) }

findbugs {
   toolVersion = "+"
   reportsDir = file("$project.buildDir/findbugsReports")
   effort = "max"
   reportLevel = "low"
   ignoreFailures = false
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
